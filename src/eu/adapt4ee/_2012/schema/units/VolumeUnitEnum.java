//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.02 at 11:00:40 PM CEST 
//


package eu.adapt4ee._2012.schema.units;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for volumeUnitEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="volumeUnitEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN">
 *     &lt;enumeration value="CubicKilometers"/>
 *     &lt;enumeration value="CubicMeters"/>
 *     &lt;enumeration value="CubicCentimeters"/>
 *     &lt;enumeration value="CubicMillimeters"/>
 *     &lt;enumeration value="CubicMiles"/>
 *     &lt;enumeration value="CubicYards"/>
 *     &lt;enumeration value="CubicFeet"/>
 *     &lt;enumeration value="CubicInches"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "volumeUnitEnum")
@XmlEnum
public enum VolumeUnitEnum {

    @XmlEnumValue("CubicKilometers")
    CUBIC_KILOMETERS("CubicKilometers"),
    @XmlEnumValue("CubicMeters")
    CUBIC_METERS("CubicMeters"),
    @XmlEnumValue("CubicCentimeters")
    CUBIC_CENTIMETERS("CubicCentimeters"),
    @XmlEnumValue("CubicMillimeters")
    CUBIC_MILLIMETERS("CubicMillimeters"),
    @XmlEnumValue("CubicMiles")
    CUBIC_MILES("CubicMiles"),
    @XmlEnumValue("CubicYards")
    CUBIC_YARDS("CubicYards"),
    @XmlEnumValue("CubicFeet")
    CUBIC_FEET("CubicFeet"),
    @XmlEnumValue("CubicInches")
    CUBIC_INCHES("CubicInches");
    private final String value;

    VolumeUnitEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static VolumeUnitEnum fromValue(String v) {
        for (VolumeUnitEnum c: VolumeUnitEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
