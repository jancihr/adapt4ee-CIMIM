//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.02 at 11:00:40 PM CEST 
//


package eu.adapt4ee._2012.schema.event;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the eu.adapt4ee._2012.schema.event package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: eu.adapt4ee._2012.schema.event
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TEquipmentUsedEvent }
     * 
     */
    public TEquipmentUsedEvent createTEquipmentUsedEvent() {
        return new TEquipmentUsedEvent();
    }

    /**
     * Create an instance of {@link TEvent }
     * 
     */
    public TEvent createTEvent() {
        return new TEvent();
    }

    /**
     * Create an instance of {@link TSpaceOccupancy }
     * 
     */
    public TSpaceOccupancy createTSpaceOccupancy() {
        return new TSpaceOccupancy();
    }

    /**
     * Create an instance of {@link TSpaceEnvironmentEvent }
     * 
     */
    public TSpaceEnvironmentEvent createTSpaceEnvironmentEvent() {
        return new TSpaceEnvironmentEvent();
    }

    /**
     * Create an instance of {@link TOccupantTrajectory }
     * 
     */
    public TOccupantTrajectory createTOccupantTrajectory() {
        return new TOccupantTrajectory();
    }

    /**
     * Create an instance of {@link THVACEvent }
     * 
     */
    public THVACEvent createTHVACEvent() {
        return new THVACEvent();
    }

    /**
     * Create an instance of {@link TSpaceOccupantPossitions }
     * 
     */
    public TSpaceOccupantPossitions createTSpaceOccupantPossitions() {
        return new TSpaceOccupantPossitions();
    }

    /**
     * Create an instance of {@link TEnergyEvent }
     * 
     */
    public TEnergyEvent createTEnergyEvent() {
        return new TEnergyEvent();
    }

    /**
     * Create an instance of {@link TVoltageEvent }
     * 
     */
    public TVoltageEvent createTVoltageEvent() {
        return new TVoltageEvent();
    }

    /**
     * Create an instance of {@link TExternalEnvironmentEvent }
     * 
     */
    public TExternalEnvironmentEvent createTExternalEnvironmentEvent() {
        return new TExternalEnvironmentEvent();
    }

    /**
     * Create an instance of {@link TCurrentEvent }
     * 
     */
    public TCurrentEvent createTCurrentEvent() {
        return new TCurrentEvent();
    }

    /**
     * Create an instance of {@link TSpaceMovement }
     * 
     */
    public TSpaceMovement createTSpaceMovement() {
        return new TSpaceMovement();
    }

    /**
     * Create an instance of {@link TLightingEvent }
     * 
     */
    public TLightingEvent createTLightingEvent() {
        return new TLightingEvent();
    }

    /**
     * Create an instance of {@link TOccupantMovementEvent }
     * 
     */
    public TOccupantMovementEvent createTOccupantMovementEvent() {
        return new TOccupantMovementEvent();
    }

    /**
     * Create an instance of {@link TEquipmentUsedEvent.RelatedOccupant }
     * 
     */
    public TEquipmentUsedEvent.RelatedOccupant createTEquipmentUsedEventRelatedOccupant() {
        return new TEquipmentUsedEvent.RelatedOccupant();
    }

}
